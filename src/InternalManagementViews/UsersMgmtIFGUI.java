/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InternalManagementViews;

import InternalDialogs.UsersOpsIFGUI;
import InternalViews.Menu.MenuOperationsGUI;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.bean.Usuarios;
import model.dao.UsuariosDAO;

/**
 *
 * @author focuswts
 */
public class UsersMgmtIFGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form UsersMgmtIFGUI
     */
    public UsersMgmtIFGUI() {
        initComponents();
        fill_tbUsers();
    }

    private Usuarios fieldToObj() {
        try {
            int id = Integer.valueOf(tb_Users.getValueAt(tb_Users.getSelectedRow(), 0).toString());
            String login = tb_Users.getValueAt(tb_Users.getSelectedRow(), 1).toString();
            String password = tb_Users.getValueAt(tb_Users.getSelectedRow(), 2).toString();
            String permission = tb_Users.getValueAt(tb_Users.getSelectedRow(), 3).toString();

            Usuarios u = new Usuarios();
            u.setId(id);
            u.setLogin(login);
            u.setSenha(password);
            u.setNivel(permission);
            return u;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro Ao Criar OBJ User: " + e);
            return null;
        }

    }

    private void fill_tbUsers() {
        DefaultTableModel aModel = (DefaultTableModel) tb_Users.getModel();
        try {

            UsuariosDAO uDAO = new UsuariosDAO();
            ArrayList<Usuarios> Usuarios = null;
            Usuarios = uDAO.findAll();

            int numLinhas = aModel.getRowCount();
            for (int i = 0; i < numLinhas; i++) {
                aModel.removeRow(0);
            }
            for (int i = 0; i < Usuarios.size(); i++) {
                Object[] rowDados = new Object[5];
                rowDados[0] = Usuarios.get(i).getId();
                rowDados[1] = Usuarios.get(i).getLogin();
                rowDados[2] = Usuarios.get(i).getSenha();
                rowDados[3] = Usuarios.get(i).getNivel();
                aModel.addRow(rowDados);
            }
            this.tb_Users.setModel(aModel);
        } catch (Exception e) {
            System.out.println("Erro Ao Preencher UsersTB: " + e);
        }
    }

    public static void refresh_tbUsers() {
        DefaultTableModel aModel = (DefaultTableModel) tb_Users.getModel();
        try {

            UsuariosDAO uDAO = new UsuariosDAO();
            ArrayList<Usuarios> Usuarios = null;
            Usuarios = uDAO.findAll();

            int numLinhas = aModel.getRowCount();
            for (int i = 0; i < numLinhas; i++) {
                aModel.removeRow(0);
            }
            for (int i = 0; i < Usuarios.size(); i++) {
                Object[] rowDados = new Object[5];
                rowDados[0] = Usuarios.get(i).getId();
                rowDados[1] = Usuarios.get(i).getLogin();
                rowDados[2] = Usuarios.get(i).getSenha();
                rowDados[3] = Usuarios.get(i).getNivel();
                aModel.addRow(rowDados);
            }
            tb_Users.setModel(aModel);
        } catch (Exception e) {
            System.out.println("Erro Ao Dar Refresh TBUser: " + e);
        }
    }

    private void deleteUser() {
        Usuarios u = new Usuarios();
        UsuariosDAO uDAO = new UsuariosDAO();
        try {
            int id = Integer.valueOf(tb_Users.getValueAt(tb_Users.getSelectedRow(), 0).toString());
            u.setId(id);
            String login = tb_Users.getValueAt(tb_Users.getSelectedRow(), 1).toString();
            u.setLogin(login);

            if (MenuOperationsGUI.user.getLogin().equals(u.getLogin())) {
                JOptionPane.showMessageDialog(this, "Impossível Excluir Usuário Logado!");
            } else {
                uDAO.delete(u);
                JOptionPane.showMessageDialog(this, "Usuário Excluído Com Sucesso!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro Ao Excluir Usuário: " + e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_Users = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btn_add = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_delUser = new javax.swing.JButton();

        setClosable(true);
        setTitle("Gerenciamento De Usuários");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tb_Users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Login", "Password", "Permission"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_Users.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tb_Users);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Operações Disponíveis"));

        btn_add.setText("Adicionar Usuário");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_edit.setText("Editar Usuário");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_delUser.setText("Excluir Usuário");
        btn_delUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_edit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_add)
                .addGap(18, 18, 18)
                .addComponent(btn_delUser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add)
                    .addComponent(btn_edit)
                    .addComponent(btn_delUser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        String operation = "Add";
        try {
            UsersOpsIFGUI viewUsers = new UsersOpsIFGUI(null, true, operation);
            this.getParent().add(viewUsers);
            viewUsers.toFront();
            viewUsers.setVisible(true);
        } catch (Exception e) {
        }

    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        String operation = "Edit";
        try {
            UsersOpsIFGUI viewUsers = new UsersOpsIFGUI(null, true, operation, fieldToObj());
            this.getParent().add(viewUsers);
            viewUsers.toFront();
            viewUsers.setVisible(true);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_delUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delUserActionPerformed
        deleteUser();
        refresh_tbUsers();
    }//GEN-LAST:event_btn_delUserActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        fill_tbUsers();
    }//GEN-LAST:event_formInternalFrameActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delUser;
    private javax.swing.JButton btn_edit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tb_Users;
    // End of variables declaration//GEN-END:variables
}
